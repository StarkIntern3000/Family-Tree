public class Person {
    private String name;
    private int age;
    private boolean sex;
    private char gender;
    private int children;
    private Person left;
    private Person right;
    private Person parent;
    private boolean parentCount;
    private int height,depth;
    
    public Person(String n, int a, boolean s, char g ){
        name = n;
        age = a;
        sex = s;
        gender = g;
        children = 0;
        parentCount = false;
        parent = null;
    }
    
    public void AttriEditor(String type, String newEntry){
        switch(type){
            case "name":
                name = newEntry;
                break;
            case "age":
                age = Integer.parseInt(newEntry);
                break;
            case "sex":
                sex = Boolean.parseBoolean(newEntry);
                break;
            case "gender":
                gender = newEntry.charAt(0);
                break;
        }
    }
      public boolean addChild(Person c){
        boolean cycle = false;
        switch (children){
        case 0:
            left = c;
            cycle = left.assignParent(this);
            children++;
            break;
        case 1:
            right = c;
            cycle = right.assignParent(this);
            children++;
            break;
        case 2:
            System.out.println("Error: family tree is ill-formed; check if cycles are present");
            cycle = true;
            break;
            
        }
        
        return cycle;
    }
    public boolean assignParent(Person p){
        boolean cycle = false;
        if (parentCount){
            cycle = true;
            System.out.println("Error: family tree is ill-formed; check if cycles are present");
        }
        else {
            parent = p;
            parentCount = true;
        }
        return cycle;
    }
    public void assignHeight(int h){
        height = h;
    }
    public void assignDepth(int d){
        depth = d;
    }
    public Person returnLeft(){
        return left;
    }
    public Person returnRight(){
        return right;
    }
    public Person returnParent(){
        return parent;
    }
    public String returnName(){
        return name;
    }
    
    public int returnAge(){
        return age;
    }
    
    public String returnSex(){
        String returnS;
        if (sex){
            returnS = "male";
        }
        else{
            returnS = "female";
        }
        return returnS;
    }
    
    public char returnGender(){
        return gender;
    }
    public int returnHeight(int h){
        height = h;
        if (this.returnLeft() != null) {
            height = height+1;
            return this.returnLeft().returnHeight(height);
        }
        else if (this.returnRight() != null) {
            height = height+1;
            return this.returnLeft().returnHeight(height);
        }
        else {
            return height;
        }
    }
    public int returnDepth(int d) {
        depth = d;
        if (this.returnParent() != null) {
            depth = depth+1;
            return this.returnParent().returnDepth(depth);
        }
        else {
            return depth;
        }
    }
  
}
