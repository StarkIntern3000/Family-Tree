import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.*;

public class TreeReader {
    private String filenameIn, filenameOut;
    private Person[] currentTree;
    private ArrayList<ArrayList<String>> nameListSmall, nameListBig;
    private int i = 0;
    
    
    public Person[] loadTree(String s){
        nameListSmall = new ArrayList<>();
        nameListBig = new ArrayList<>();
        while(i<52){  
            ArrayList<String> inArray = new ArrayList<>();
            nameListSmall.add(inArray);
            nameListBig.add(inArray);
            i++;
        }

        filenameIn = s;
        Scanner scan = null;
        FileReader reader = null;
        try {
            reader = new FileReader(filenameIn + ".ft");
            System.out.println("File found.");
            scan = new Scanner(reader);
        } catch(FileNotFoundException F) {
            System.out.println("File not found.");   
        }
        
        while (scan.hasNextLine()) {
            String inputScanned = scan.nextLine();
            String [] lineRead = inputScanned.split(" ");
            System.out.println("FAMILY: " + lineRead[0]);
        }
        
        
        return currentTree;
        
        
    }
    
    public void writeTree(String s){
        filenameOut = s;
    }
    
    public boolean nameChecker(String name){
        char firstCharacter = name.charAt(0);
        int index = firstCharacter;
        if(index < 97){
            int j = 0;
            index = index - 65;
            while(j<=nameListSmall.get(index).size()){
                if(name == nameListSmall.get(index).get(j)){
                    return false;
                }
                j++;
            }
            nameListSmall.get(index).add(name);
        }else if(index >= 97){
            int k = 0;
            index = index - 97;
            while(k<=nameListBig.get(index).size()){
                if(name == nameListBig.get(index).get(k)){
                    return false;
                }
                k++;
            }
            nameListBig.get(index).add(name);
        }
        return true;
    }
}
